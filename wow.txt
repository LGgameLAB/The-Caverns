Your `character()` function is in charge of displaying the character's picture as well as where on the screen in the command `SCREEN.blit(CHAR, (450, 250))`. Since you have the x and y you want stored at the top you can simply replace the  contents of that function with `SCREEN.blit(CHAR, (x, y))` and then alter the player's coordinates when you check the button press.
```if keys_pressed[pygame.K_a]:
            x -= VEL
```
However this (I think) only works if you define the x and y inside of main like:
```def main():
    clock = pygame.time.Clock()        #time or something idk
    run = True
    x,y = 450, 250
```
Minorly touched up code would look like.
```
import pygame     #game inported, all varibles in higher case
pygame.init()

BACKGROUND_COLOUR = 255, 255, 255    #bg varible
WIDTH, HEIGHT = 900, 500       #dimensions varible
SCREEN = pygame.display.set_mode((WIDTH, HEIGHT))      #telling the program to make a new window with that varible
pygame.display.set_caption("Walking")     #window name

SCREEN.fill(BACKGROUND_COLOUR)       #telling the program to change to the bg varible 

FPS = 24    #pretty self explanitory
VEL = 5     #for movement

def main():
    clock = pygame.time.Clock()        #time or something idk
    run = True
    x, y = 250, 450
    CHAR = pygame.Surface((25, 25))#pygame.image.load("square.png")        #Just load the image once here
    while run:
        pygame.time.delay(100)          #wait function from scratch
        SCREEN.fill(BACKGROUND_COLOUR)

        def character():
            SCREEN.blit(CHAR, (x, y))    #position (from top left corner)

        character()


        for event in pygame.event.get():
            if event.type == pygame.QUIT:       #so you can actually close it
                run = False

        keys_pressed = pygame.key.get_pressed()
        if keys_pressed[pygame.K_a]:
            x -= VEL
            print(f"left: {x}")      #print commands to check if movenent works
            

        pygame.display.update()

    pygame.quit()


if __name__ == "__main__":         #Runs main
    main()
```

Lastly make sure you include `pygame.display.flip()` inside the loop or your SCREEN won't refresh (I put a SCREEN.fill there instead for your background color).